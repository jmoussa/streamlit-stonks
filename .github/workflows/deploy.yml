name: Deploy Streamlit Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: stock-analysis-app
  ECS_SERVICE: stock-analysis-app-service 
  ECS_CLUSTER: stock-analysis-app-cluster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: 462366532346.dkr.ecr.us-east-1.amazonaws.com/stock-analysis-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build, tag, and push Docker image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: 462366532346.dkr.ecr.us-east-1.amazonaws.com/stock-analysis-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max


      - name: Set up Python for CDK
        if: github.ref == 'refs/heads/main'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install CDK dependencies
        if: github.ref == 'refs/heads/main'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-cdk.txt
          npm install -g aws-cdk

      - name: Deploy with CDK
        if: github.ref == 'refs/heads/main'
        run: |
          cdk deploy streamlit-service-stack --require-approval never --app="python app.py"

      - name: Force update ECS service to use latest image
        if: github.ref == 'refs/heads/main'
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment